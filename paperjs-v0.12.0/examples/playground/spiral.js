// Generated by CoffeeScript 1.10.0
var Spiral, onFrame, s;

Spiral = (function() {
  function Spiral() {
    this.frame = Path.Rectangle(new Point(0, 0), new Size(window.innerWidth, window.innerHeight));
    this.frame.fillColor = "#fff";
    this.circle = Path.Circle(this.frame.bounds.center, this.frame.bounds.height / 2);
    this.circle.strokeColor = "#c0c0c0";
    this.cogRadius = this.circle.bounds.width / 5;
    this.cog = Path.Circle(this.frame.bounds.center, this.cogRadius);
    this.cog.strokeColor = "#c0c0c0";
    this.drawPoint = Path.Circle(this.frame.bounds.center, 10);
    this.drawPoint.fillColor = "red";
    this.arm = new Path({
      segments: [this.circle.bounds.center, this.circle.bounds.rightCenter]
    });
    this.arm.strokeWidth = 3;
    this.arm.strokeColor = "#c0c0c0";
    this.g = new Group([this.cog, this.drawPoint]);
    this.g.position.x += (this.circle.bounds.width / 2) - this.cog.bounds.width / 2;
    this.drawPoint.position.x += this.cog.bounds.width / 4.3;
    this.line = new Path({
      strokeColor: 'black',
      strokeWidth: 1
    });
    this.armgroup = new Group([this.arm, this.g]);
  }

  Spiral.prototype.onFrame = function(e) {
    var first, newPoint, s;
    s = Math.sin(e.count);
    this.line.smooth({
      type: 'continuous'
    });
    newPoint = this.drawPoint.position;
    this.g.rotate(-10);
    this.armgroup.rotate(4.1, this.circle.bounds.center);
    this.line.add(newPoint);
    if (this.line.segments.length > 0) {
      return first = this.line.segments[0];
    }
  };

  return Spiral;

})();

s = new Spiral();

onFrame = s.onFrame.bind(s);
